name: Build and Push Docker Image

on:
  # 自动触发已关闭，只保留手动触发
  # push:
  #   branches: [ master ]
  #   tags: [ 'v*' ]
  # pull_request:
  #   branches: [ master ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Test Docker image
        if: github.event_name == 'pull_request'
        run: |
          docker run --rm -d --name test-container -p 2233:2233 ${{ steps.meta.outputs.tags }}
          sleep 30
          
          # 测试API端点
          if curl -f http://localhost:2233/docs; then
            echo "✅ Docker image test passed"
          else
            echo "❌ Docker image test failed"
            docker logs test-container
            exit 1
          fi
          
          docker stop test-container

      # SBOM generation temporarily disabled due to compatibility issues
      # - name: Generate SBOM
      #   if: github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch'
      #   uses: anchore/sbom-action@v0
      #   with:
      #     image: ${{ steps.meta.outputs.tags }}
      #     format: spdx-json
      #     output-file: sbom.spdx.json
      #   continue-on-error: true

      # - name: Upload SBOM
      #   if: github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch' && hashFiles('sbom.spdx.json') != ''
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: sbom
      #     path: sbom.spdx.json